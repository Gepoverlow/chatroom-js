{"version":3,"file":"main.js","mappings":";;;;;;;;;;;;;;;;AAA8B;AAC+B;;AAE7D;AACA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB,uCAAI;AACzB;;AAEA;AACA;AACA;;AAEA;AACA,IAAI,yEAAc;AAClB;AACA;;AAEoB;;;;;;;;;;;;;;;ACtBpB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEmB;;;;;;;;;;;;;;;;ACZiB;;AAEpC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,wBAAwB,6CAAO;AAC/B,+BAA+B,gBAAgB,QAAQ,kBAAkB;;AAEzE;;AAEA;AACA;AACA;AACA;AACA;;AAEgB;;;;;;;;;;;;;;;ACzBhB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEyB;;;;;;;;;;;;;;;ACVzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAE0B;;;;;;;;;;;;;;;ACV1B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAE6B;;;;;;;;;;;;;;;ACrB7B;AACA;AACA;AACA;AACA;;AAE4B;;;;;;;;;;;;;;;;;;;ACN4B;AACN;AACI;AACN;;AAEhD;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,EAAE,6DAAa;AACf,EAAE,mEAAgB;AAClB,EAAE,qEAAiB;AACnB,EAAE,+DAAc;AAChB;;AAE0B;;;;;;;UCpB1B;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACN8C;;AAE9C;;AAEA;;AAEA;AACA;;AAEA,qBAAqB,uDAAQ;;AAE7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA,IAAI","sources":["webpack://chatroom_js/./src/classes/Chatroom.js","webpack://chatroom_js/./src/classes/Message.js","webpack://chatroom_js/./src/classes/User.js","webpack://chatroom_js/./src/dom-stuff/chatBoxRender.js","webpack://chatroom_js/./src/dom-stuff/chatLogoRender.js","webpack://chatroom_js/./src/dom-stuff/chatMessageRender.js","webpack://chatroom_js/./src/dom-stuff/chatOnlineRender.js","webpack://chatroom_js/./src/dom-stuff/chatRoomRender.js","webpack://chatroom_js/webpack/bootstrap","webpack://chatroom_js/webpack/runtime/define property getters","webpack://chatroom_js/webpack/runtime/hasOwnProperty shorthand","webpack://chatroom_js/webpack/runtime/make namespace object","webpack://chatroom_js/./src/index.js"],"sourcesContent":["import { User } from \"./User\";\nimport { renderChatroom } from \"../dom-stuff/chatRoomRender\";\n\nclass Chatroom {\n  #user;\n  constructor() {\n    this.#user = undefined;\n  }\n\n  setUser(username) {\n    this.#user = new User(username);\n  }\n\n  getUser() {\n    return this.#user;\n  }\n\n  init() {\n    renderChatroom();\n  }\n}\n\nexport { Chatroom };\n","class Message {\n  #text;\n\n  constructor(text) {\n    this.#text = text;\n  }\n\n  getText() {\n    return this.#text;\n  }\n}\n\nexport { Message };\n","import { Message } from \"./Message\";\n\nclass User {\n  #userName;\n\n  constructor(userName) {\n    this.#userName = userName;\n  }\n\n  getUserName() {\n    return this.#userName;\n  }\n\n  sendMessage(what) {\n    const message = new Message(what);\n    const composedMessage = `${this.#userName} said: ${message.getText()}`;\n\n    const msgUl = document.getElementById(\"chatbox-ul\");\n\n    const messageLi = document.createElement(\"li\");\n    messageLi.textContent = composedMessage;\n    msgUl.appendChild(messageLi);\n  }\n}\n\nexport { User };\n","function chatBoxRender(parent) {\n  const chatBox = document.createElement(\"div\");\n  chatBox.id = \"container-chatbox\";\n  parent.appendChild(chatBox);\n\n  const chatUl = document.createElement(\"ul\");\n  chatUl.id = \"chatbox-ul\";\n  chatBox.appendChild(chatUl);\n}\n\nexport { chatBoxRender };\n","function chatLogoRender(parent) {\n  const chatLogo = document.createElement(\"div\");\n  chatLogo.id = \"container-chatlogo\";\n  parent.appendChild(chatLogo);\n\n  const logo = document.createElement(\"h5\");\n  logo.textContent = \"[CHATROOM-NAME]\";\n  chatLogo.appendChild(logo);\n}\n\nexport { chatLogoRender };\n","function chatMessageRender(parent) {\n  const chatMessage = document.createElement(\"div\");\n  chatMessage.id = \"container-chatmessage\";\n  parent.appendChild(chatMessage);\n\n  const chatMessageBox = document.createElement(\"div\");\n  chatMessageBox.className = \"input-group\";\n  chatMessage.appendChild(chatMessageBox);\n\n  const chatMessageInput = document.createElement(\"input\");\n  chatMessageInput.className = \"form-control\";\n  chatMessageInput.id = \"message-input\";\n  chatMessageBox.appendChild(chatMessageInput);\n\n  const chatMessageButton = document.createElement(\"button\");\n  chatMessageButton.className = \"btn btn-primary\";\n  chatMessageButton.id = \"submit-message-button\";\n  chatMessageButton.textContent = \"Submit Message\";\n  chatMessageBox.appendChild(chatMessageButton);\n}\n\nexport { chatMessageRender };\n","function chatOnlineRender(parent) {\n  const chatOnline = document.createElement(\"div\");\n  chatOnline.id = \"container-chatonline\";\n  parent.appendChild(chatOnline);\n}\n\nexport { chatOnlineRender };\n","import { chatMessageRender } from \"./chatMessageRender\";\nimport { chatLogoRender } from \"./chatLogoRender\";\nimport { chatOnlineRender } from \"./chatOnlineRender\";\nimport { chatBoxRender } from \"./chatBoxRender\";\n\nconst containerAll = document.getElementById(\"container-all\");\n\nfunction renderChatroom() {\n  containerAll.innerHTML = \"\";\n\n  const chatRoom = document.createElement(\"div\");\n  chatRoom.id = \"container-chatroom\";\n  containerAll.appendChild(chatRoom);\n\n  chatBoxRender(chatRoom);\n  chatOnlineRender(chatRoom);\n  chatMessageRender(chatRoom);\n  chatLogoRender(chatRoom);\n}\n\nexport { renderChatroom };\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { Chatroom } from \"./classes/Chatroom\";\n\nlet socket = io.connect();\n\nconst containerAll = document.getElementById(\"container-all\");\n\nconst userNameInput = document.getElementById(\"username-input\");\nconst startForm = document.getElementById(\"start-form\");\n\nconst chatRoom = new Chatroom();\n\nstartForm.addEventListener(\"submit\", (e) => {\n  e.preventDefault();\n  const userName = userNameInput.value;\n  chatRoom.setUser(userName);\n  const user = chatRoom.getUser();\n\n  if (user.getUserName()) {\n    chatRoom.init();\n  }\n});\n\ncontainerAll.addEventListener(\"click\", (e) => {\n  if (e.target.id === \"submit-message-button\") {\n    let messageText = document.getElementById(\"message-input\").value;\n\n    let user = chatRoom.getUser();\n    user.sendMessage(messageText);\n  }\n});\n\n// const user = chatRoom.getUser();\n// user.sendMessage(\"yoooowwww\");\n// user.sendMessage(\"hey mo\");\n\n// msgAllButton.addEventListener(\"click\", () => {\n//   let message = msgInput.value;\n//   msgInput.value = \"\";\n//   socket.emit(\"sendToAll\", message);\n// });\n\n// socket.on(\"displayMessage\", (message) => {\n//   let listItem = document.createElement(\"li\");\n//   listItem.textContent = message;\n//   msgContainerUl.appendChild(listItem);\n// });\n"],"names":[],"sourceRoot":""}